package com.nt.service;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.data.domain.Sort;
import org.springframework.data.domain.Sort.Direction;
import org.springframework.stereotype.Service;

import com.nt.Repository.IMovieRepo;
import com.nt.entity.Movie;

import jakarta.persistence.criteria.CriteriaBuilder.In;

@Service("movieService")
public class MovieMgmtServiceImpl implements IMovieMgmtService {
	@Autowired // impacts the dynamically generated by proxy class object
	private IMovieRepo movieRepo;

	@Override
	public Iterable<Movie> displayMoviesByOrder(boolean asc, String... properties) {
		Sort sort = Sort.by(asc ? Direction.ASC : Direction.DESC, properties);
		return movieRepo.findAll(sort);

	}

	@Override
	public Page<Movie> generateReport(int pageNo, int pageSize, boolean asc, String... props) {
		// create Pageable obj
		Pageable pageable = PageRequest.of(pageNo, pageSize, Sort.by(asc ? Direction.ASC : Direction.DESC, props));
		// get request page records
		Page<Movie> page = movieRepo.findAll(pageable);

		return page;

	}

///////////////////////////////////////////////////////////////////////////////
	@Override
	public void generateMoviesReport(int pageSize) {
		// get count of records
		long recordsCount = movieRepo.count();
		// decide no.of pages
		long pagesCount = recordsCount / pageSize;
		// get exact pagesCount
		pagesCount = recordsCount % pageSize == 0 ? pagesCount : ++pagesCount;

		for (int pageNo = 0; pageNo < pagesCount; pageNo++) {
			// prepare Pageable object
			Pageable pageable = PageRequest.of(pageNo, pageSize);
			Page<Movie> page = movieRepo.findAll(pageable);

			System.out.println("--->pageNo -->" + pageNo + " -->pageSize--> " + pageSize + " -->pagesRecord count--> :: "
					+ page.getNumberOfElements());
			List<Movie> list = page.getContent();
			// list.forEach(System.out::println);
			list.forEach(movie -> {
				System.out.println(movie);
			});
		} // forEach

	}
}
